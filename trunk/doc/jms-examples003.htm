<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.16 Build 1" />
<meta name="date" content="2013-06-27T16:6:13Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Writing More Advanced JMS Applications" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Writing More Advanced JMS Applications | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: June, 2013</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part IV Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">21</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">22</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">23</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">24</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">25</span> JAX-RS: Advanced Topics and Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part V Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">26</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">27</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">28</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">29</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">30</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part VI Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">31</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">32</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">33</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">34</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">35</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">36</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">37</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">38</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">39</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">40</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">41</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part VIII Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">42</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">43</span> Java Message Service Examples</a></h2>
<ul style="list-style-type:none">
<li><a href="jms-examples001.htm#BABEFBHJ"><span class="secnum">43.1</span> Overview of the JMS Examples</a></li>
<li><a href="jms-examples002.htm#BNCFA"><span class="secnum">43.2</span> Writing Simple JMS Applications</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFD"><span class="secnum">43.2.1</span> Starting the JMS Provider</a></li>
<li><a href="jms-examples002.htm#GKTJS"><span class="secnum">43.2.2</span> Creating JMS Administered Objects</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BABHEFCB"><span class="secnum">43.2.2.1</span> To Create Resources for the Simple Examples</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BABEEABE"><span class="secnum">43.2.3</span> Building All the Simple Examples</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#sthref2250"><span class="secnum">43.2.3.1</span> To Build All the Simple Examples Using NetBeans IDE</a></li>
<li><a href="jms-examples002.htm#sthref2251"><span class="secnum">43.2.3.2</span> To Build All the Simple Examples on the Command Line</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BABIHCAE"><span class="secnum">43.2.4</span> Sending Messages</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#sthref2254"><span class="secnum">43.2.4.1</span> The Producer.java Client</a></li>
<li><a href="jms-examples002.htm#sthref2255"><span class="secnum">43.2.4.2</span> To Run the Producer Client</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BNCFB"><span class="secnum">43.2.5</span> Receiving Messages Synchronously</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFC"><span class="secnum">43.2.5.1</span> The SynchConsumer.java Client</a></li>
<li><a href="jms-examples002.htm#BNCFG"><span class="secnum">43.2.5.2</span> To Run the SynchConsumer and Producer Clients</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BNCFH"><span class="secnum">43.2.6</span> Using a Message Listener for Asynchronous Message Delivery</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFI"><span class="secnum">43.2.6.1</span> Writing the AsynchConsumer.java and TextListener.java Clients</a></li>
<li><a href="jms-examples002.htm#BNCFK"><span class="secnum">43.2.6.2</span> To Run the AsynchConsumer and Producer Clients</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BNCFL"><span class="secnum">43.2.7</span> Browsing Messages on a Queue</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFM"><span class="secnum">43.2.7.1</span> The MessageBrowser.java Client</a></li>
<li><a href="jms-examples002.htm#BNCFN"><span class="secnum">43.2.7.2</span> To Run the QueueBrowser Client</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BABDDHHC"><span class="secnum">43.2.8</span> Running Multiple Consumers on the Same Destination</a></li>
</ul>
</li>
<li><div id="backgroundColor"><a href="jms-examples003.htm#GIWFH"><span class="secnum">43.3</span> Writing More Advanced JMS Applications</a><ul style="list-style-type:none">
<li><a href="jms-examples003.htm#sthref2268"><span class="secnum">43.3.1</span> To Create Resources for the Advanced Examples</a></li>
<li><a href="jms-examples003.htm#sthref2269"><span class="secnum">43.3.2</span> Building All the Advanced Examples</a>
<ul style="list-style-type:none">
<li><a href="jms-examples003.htm#sthref2271"><span class="secnum">43.3.2.1</span> To Build All the Advanced Examples Using NetBeans IDE</a></li>
<li><a href="jms-examples003.htm#sthref2272"><span class="secnum">43.3.2.2</span> To Build All the Advanced Examples on the Command Line</a></li>
</ul>
</li>
<li><a href="jms-examples003.htm#BNCGG"><span class="secnum">43.3.3</span> Using Durable Subscriptions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples003.htm#GJSCI"><span class="secnum">43.3.3.1</span> To Run the DurableSubscriptionExample Client</a></li>
</ul>
</li>
<li><a href="jms-examples003.htm#BNCFX"><span class="secnum">43.3.4</span> Acknowledging Messages</a>
<ul style="list-style-type:none">
<li><a href="jms-examples003.htm#GJSCG"><span class="secnum">43.3.4.1</span> To Run the AckEquivExample Client</a></li>
</ul>
</li>
<li><a href="jms-examples003.htm#BNCGJ"><span class="secnum">43.3.5</span> Using Local Transactions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples003.htm#GJSHA"><span class="secnum">43.3.5.1</span> To Run the TransactedExample Client</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="jms-examples004.htm#BABGEFHC"><span class="secnum">43.4</span> Writing High Performance and Scalable JMS Applications</a>
<ul style="list-style-type:none">
<li><a href="jms-examples004.htm#BABIBEAC"><span class="secnum">43.4.1</span> Using Shared Nondurable Subscriptions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples004.htm#sthref2282"><span class="secnum">43.4.1.1</span> Writing the Clients for the Shared Consumer Example</a></li>
<li><a href="jms-examples004.htm#sthref2283"><span class="secnum">43.4.1.2</span> To Run the SharedConsumer and Producer Clients</a></li>
</ul>
</li>
<li><a href="jms-examples004.htm#BABEJBHA"><span class="secnum">43.4.2</span> Using Shared Durable Subscriptions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples004.htm#sthref2286"><span class="secnum">43.4.2.1</span> To Run the ShareDurableSubscriberExample and Producer Clients</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples005.htm#BABBABFC"><span class="secnum">43.5</span> Sending and Receiving Messages Using a Simple Web Application</a>
<ul style="list-style-type:none">
<li><a href="jms-examples005.htm#sthref2292"><span class="secnum">43.5.1</span> The websimplemessage Facelets Pages</a></li>
<li><a href="jms-examples005.htm#sthref2293"><span class="secnum">43.5.2</span> The websimplemessage Managed Beans</a></li>
<li><a href="jms-examples005.htm#sthref2294"><span class="secnum">43.5.3</span> Running the websimplemessage Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples005.htm#sthref2295"><span class="secnum">43.5.3.1</span> Creating Resources for the websimplemessage Example</a></li>
<li><a href="jms-examples005.htm#sthref2296"><span class="secnum">43.5.3.2</span> To Package and Deploy websimplemessage Using NetBeans IDE</a></li>
<li><a href="jms-examples005.htm#sthref2297"><span class="secnum">43.5.3.3</span> To Package and Deploy websimplemessage Using Maven</a></li>
<li><a href="jms-examples005.htm#sthref2298"><span class="secnum">43.5.3.4</span> To Run the websimplemessage Example</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples006.htm#BNBPK"><span class="secnum">43.6</span> Receiving Messages Asynchronously using a Message-Driven Bean</a>
<ul style="list-style-type:none">
<li><a href="jms-examples006.htm#BNBPL"><span class="secnum">43.6.1</span> Overview of the simplemessage Example</a></li>
<li><a href="jms-examples006.htm#BNBPN"><span class="secnum">43.6.2</span> The simplemessage Application Client</a></li>
<li><a href="jms-examples006.htm#BNBPO"><span class="secnum">43.6.3</span> The simplemessage Message-Driven Bean Class</a>
<ul style="list-style-type:none">
<li><a href="jms-examples006.htm#BNBPP"><span class="secnum">43.6.3.1</span> The onMessage Method</a></li>
</ul>
</li>
<li><a href="jms-examples006.htm#BNBPQ"><span class="secnum">43.6.4</span> Running the simplemessage Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples006.htm#BNBPR"><span class="secnum">43.6.4.1</span> Ereating Resources for the simplemessage Example</a></li>
<li><a href="jms-examples006.htm#sthref2316"><span class="secnum">43.6.4.2</span> To Run the simplemessage Example Using NetBeans IDE</a></li>
<li><a href="jms-examples006.htm#BNBPT"><span class="secnum">43.6.4.3</span> To Run the simplemessage Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples007.htm#BNCGW"><span class="secnum">43.7</span> Sending Messages from a Session Bean to an MDB</a>
<ul style="list-style-type:none">
<li><a href="jms-examples007.htm#BNCGX"><span class="secnum">43.7.1</span> Writing the Application Components for the clientsessionmdb Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples007.htm#BNCGZ"><span class="secnum">43.7.1.1</span> Coding the Application Client: MyAppClient.java</a></li>
<li><a href="jms-examples007.htm#BNCHA"><span class="secnum">43.7.1.2</span> Coding the Publisher Session Bean</a></li>
<li><a href="jms-examples007.htm#BNCHB"><span class="secnum">43.7.1.3</span> Coding the Message-Driven Bean: MessageBean.java</a></li>
</ul>
</li>
<li><a href="jms-examples007.htm#sthref2324"><span class="secnum">43.7.2</span> Running the clientsessionmdb Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples007.htm#BNCHC"><span class="secnum">43.7.2.1</span> Creating Resources for the clientsessionmdb Example</a></li>
<li><a href="jms-examples007.htm#sthref2325"><span class="secnum">43.7.2.2</span> To Run clientsessionmdb Using NetBeans IDE</a></li>
<li><a href="jms-examples007.htm#sthref2326"><span class="secnum">43.7.2.3</span> To Run clientsessionmdb Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples008.htm#BNCHF"><span class="secnum">43.8</span> Using an Entity to Join Messages from Two MDBs</a>
<ul style="list-style-type:none">
<li><a href="jms-examples008.htm#BNCHG"><span class="secnum">43.8.1</span> Overview of the clientmdbentity Example Application</a></li>
<li><a href="jms-examples008.htm#BNCHI"><span class="secnum">43.8.2</span> Writing the Application Components for the clientmdbentity Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples008.htm#BNCHJ"><span class="secnum">43.8.2.1</span> Coding the Application Client: HumanResourceClient.java</a></li>
<li><a href="jms-examples008.htm#BNCHK"><span class="secnum">43.8.2.2</span> Coding the Message-Driven Beans for the clientmdbentity Example</a></li>
<li><a href="jms-examples008.htm#BNCHL"><span class="secnum">43.8.2.3</span> Coding the Entity Class for the clientmdbentity Example</a></li>
</ul>
</li>
<li><a href="jms-examples008.htm#sthref2336"><span class="secnum">43.8.3</span> Running the clientmdbentity Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples008.htm#BNCHM"><span class="secnum">43.8.3.1</span> Creating Resources for the clientmdbentity Example</a></li>
<li><a href="jms-examples008.htm#sthref2337"><span class="secnum">43.8.3.2</span> To Run clientmdbentity Using NetBeans IDE</a></li>
<li><a href="jms-examples008.htm#sthref2338"><span class="secnum">43.8.3.3</span> To Run clientmdbentity Using Maven</a></li>
<li><a href="jms-examples008.htm#sthref2339"><span class="secnum">43.8.3.4</span> Viewing the Application Output</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples009.htm#BABDFDJC"><span class="secnum">43.9</span> Using NetBeans IDE to Create JMS Resources</a>
<ul style="list-style-type:none">
<li><a href="jms-examples009.htm#sthref2340"><span class="secnum">43.9.1</span> To Create JMS Resources Using NetBeans IDE</a></li>
<li><a href="jms-examples009.htm#sthref2345"><span class="secnum">43.9.2</span> To Delete JMS Resources Using NetBeans IDE</a></li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part IX Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">44</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">45</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">46</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">47</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part X Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">48</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">49</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">50</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">51</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">52</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">53</span> Concurrency Utilities</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XI Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">54</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jms-examples002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jms-examples004.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="GIWFH" name="GIWFH"></a><a id="JEETT00555" name="JEETT00555"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">43.3</span> Writing More Advanced JMS Applications</h1>
<p>The following examples show how to use some of the more advanced features of the JMS API. Most of the examples use a <code>SampleUtilities.java</code> class that contains convenience methods.</p>
<div class="sect2"><a id="sthref2268" name="sthref2268"></a>
<h2 class="sect2"><span class="secnum">43.3.1</span> To Create Resources for the Advanced Examples</h2>
<p>To create the resources needed for all the example in this section, follow these steps.</p>
<ol>
<li>
<p>Go to the <span class="variable">tut-install</span><code>/examples/jms/advanced/durablesubscriptionexample</code> directory.</p>
</li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
asadmin add-resources src/main/setup/glassfish-resources.xml
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2269" name="sthref2269"></a>
<h2 class="sect2"><span class="secnum">43.3.2</span> Building All the Advanced Examples</h2>
<p><a id="sthref2270" name="sthref2270"></a>To run the advanced examples using the GlassFish Server, package each example in an application client JAR file. The application client JAR file requires a manifest file, located in the <code>src/main/java/META-INF</code> directory for each example, along with the <code>.class</code> file.</p>
<p>The <code>pom.xml</code> file for each example specifies a plugin that creates an application client JAR file. You can build the examples using either NetBeans IDE or Maven.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2271" name="sthref2271"></a>
<h3 class="sect3"><span class="secnum">43.3.2.1</span> To Build All the Advanced Examples Using NetBeans IDE</h3>
<ol>
<li>
<p>From the <span class="gui-object-action">File</span> menu, select <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jms/
</pre></li>
<li>
<p>Expand the <code>jms</code> node and select the <code>advanced</code> folder.</p>
</li>
<li>
<p>Click <span class="gui-object-action">Open Project</span> to open all the simple examples.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>advanced</code> project and select <span class="gui-object-action">Build</span> to build all the examples.</p>
<p>This command places the application client JAR files in the <code>target</code> directories for the examples.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2272" name="sthref2272"></a>
<h3 class="sect3"><span class="secnum">43.3.2.2</span> To Build All the Advanced Examples on the Command Line</h3>
<ol>
<li>
<p>In a terminal window, go to the <code>advanced</code> directory:</p>
<pre xml:space="preserve" class="oac_no_warn">
cd <span class="variable">tut-install</span>/jms/advanced
</pre></li>
<li>
<p>Enter the following command to build all the projects:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command places the application client JAR files in the <code>target</code> directories for the examples.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNCGG" name="BNCGG"></a><a id="JEETT01297" name="JEETT01297"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">43.3.3</span> <a id="sthref2273" name="sthref2273"></a><a id="sthref2274" name="sthref2274"></a>Using Durable Subscriptions</h2>
<p>The <code>durablesubscriptionexample</code> example shows how unshared durable subscriptions work. It demonstrates that a durable subscription continues to exist and accumulate messages even when there is no active consumer on it. The client class contains a <code>DurableConsumer</code> class, a <code>MultipleSender</code> class, a <code>main</code> method, and a method that instantiates the classes and calls their methods in sequence.</p>
<p>For information on durable subscriptions, see <a href="jms-concepts003.htm#BNCGD">Creating Durable Subscriptions</a>.</p>
<p>The example client, <code>DurableSubscriptionExample.java</code>, is under the <span class="variable">tut-install</span><code>/examples/jms/advanced/durablesubscriptionexample/</code> directory.</p>
<p>The example begins in the same way as any publish/subscribe client: The consumer class starts and calls <code>createDurableConsumer</code> to create a durable subscription and a consumer on that subscription, the sending class sends some messages, and the consumer class receives them. At this point, the consumer closes itself. The sender then sends some messages while the durable subscription does not have an active consumer. The consumer then restarts and receives those messages.</p>
<a id="GJSCI" name="GJSCI"></a><a id="JEETT00279" name="JEETT00279"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">43.3.3.1</span> To Run the DurableSubscriptionExample Client</h3>
<ol>
<li>
<p>In a terminal window, go to the following directory:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jms/advanced/durablesubscriptionexample/
</pre></li>
<li>
<p>To run the client, enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
appclient -client target/durablesubscriptionexample.jar
</pre>
<p>The output looks something like this (along with some additional output):</p>
<pre xml:space="preserve" class="oac_no_warn">
Connection factory without client ID is jms/_defaultConnectionFactory
Connection factory with client ID is jms/DurableConnectionFactory
Topic name is jms/Topic
Starting consumer
SENDER: Sending message: Here is a message 1
SENDER: Sending message: Here is a message 2
CONSUMER: Reading message: Here is a message 1
SENDER: Sending message: Here is a message 3
CONSUMER: Reading message: Here is a message 2
CONSUMER: Reading message: Here is a message 3
Closing consumer
SENDER: Sending message: Here is a message 4
SENDER: Sending message: Here is a message 5
SENDER: Sending message: Here is a message 6
Starting consumer
CONSUMER: Reading message: Here is a message 4
CONSUMER: Reading message: Here is a message 5
CONSUMER: Reading message: Here is a message 6
Closing consumer
Unsubscribing from durable subscription
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNCFX" name="BNCFX"></a><a id="JEETT01296" name="JEETT01296"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">43.3.4</span> <a id="sthref2275" name="sthref2275"></a><a id="sthref2276" name="sthref2276"></a>Acknowledging Messages</h2>
<p>The <code>ackequivexample</code> example shows two alternative ways for a consuming client to ensure that a message is not acknowledged until the application has finished processing the message:</p>
<ul>
<li>
<p>Using a synchronous consumer in a <code>JMSContext</code> that has been configured to use the <code>CLIENT_ACKNOWLEDGE</code> setting</p>
</li>
<li>
<p>Using a message listener for asynchronous message delivery in a <code>JMSContext</code> that has been configured to use the default <code>AUTO_ACKNOWLEDGE</code> setting</p>
</li>
</ul>
<div align="center">
<div class="inftblnote"><br />
<table class="Note oac_no_warn" summary="" border="1" width="80%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<tbody>
<tr>
<td align="left">
<p class="notep1">Note:</p>
<p>In the Java EE platform, message listeners and <code>CLIENT_ACKNOWLEDGE</code> sessions can be used only in application clients, as in this example.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblnote" --></div>
<p>For information about message acknowledgment, see <a href="jms-concepts004.htm#BNCFW">Controlling Message Acknowledgment</a>.</p>
<p>The following table describes four possible interactions between types of consumers and types of acknowledgment.</p>
<div class="tblformal"><a id="sthref2277" name="sthref2277"></a><a id="sthref2278" name="sthref2278"></a>
<p class="titleintable">Table 43-3 Message Acknowledgment with Synchronous and Asynchronous Consumers</p>
<table class="Formal" title="Message Acknowledgment with Synchronous and Asynchronous Consumers" summary="This table describes the behavior of synchronous and asynchronous consumers with client and auto acknowledgment." dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="21%" />
<col width="29%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t7">Consumer Type</th>
<th align="left" valign="bottom" id="r1c2-t7">Acknowledgment Type</th>
<th align="left" valign="bottom" id="r1c3-t7">Behavior</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t7" headers="r1c1-t7">
<p>Synchronous</p>
</td>
<td align="left" headers="r2c1-t7 r1c2-t7">
<p>Client</p>
</td>
<td align="left" headers="r2c1-t7 r1c3-t7">
<p>Client acknowledges message after processing is complete</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t7" headers="r1c1-t7">
<p>Asynchronous</p>
</td>
<td align="left" headers="r3c1-t7 r1c2-t7">
<p>Client</p>
</td>
<td align="left" headers="r3c1-t7 r1c3-t7">
<p>Client acknowledges message after processing is complete</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t7" headers="r1c1-t7">
<p>Synchronous</p>
</td>
<td align="left" headers="r4c1-t7 r1c2-t7">
<p>Auto</p>
</td>
<td align="left" headers="r4c1-t7 r1c3-t7">
<p>Acknowledgment happens immediately after <code>receive</code> call; message cannot be redelivered if any subsequent processing steps fail</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t7" headers="r1c1-t7">
<p>Asynchronous</p>
</td>
<td align="left" headers="r5c1-t7 r1c2-t7">
<p>Auto</p>
</td>
<td align="left" headers="r5c1-t7 r1c3-t7">
<p>Message is automatically acknowledged when <code>onMessage</code> method returns</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The example is under the <span class="variable">tut-install</span><code>/examples/jms/advanced/ackequivexample</code> directory.</p>
<p>The example client, <code>AckEquivExample.java</code>, contains an <code>AsynchConsumer</code> class with a <code>TextListener</code> class, a <code>TopicSender</code> class, a <code>SynchConsumer</code> class, a <code>QueueSender</code> class, a <code>main</code> method, and a method that runs the other classes' threads.</p>
<p>The example uses the following objects:</p>
<ul>
<li>
<p><code>jms/Queue</code> and <code>jms/Topic</code>: resources that you created for <a href="jms-examples002.htm#BNCFB">Receiving Messages Synchronously</a>.</p>
</li>
<li>
<p><code>jms/ControlQueue</code>: an additional queue</p>
</li>
<li>
<p><code>java:comp/DefaultJMSConnectionFactory</code>, the platform default connection factory preconfigured with GlassFish Server</p>
</li>
<li>
<p><code>jms/DurableConnectionFactory</code>: a connection factory with a client ID (see <a href="jms-concepts003.htm#BNCGD">Creating Durable Subscriptions</a> for more information)</p>
</li>
</ul>
<a id="GJSCG" name="GJSCG"></a><a id="JEETT00277" name="JEETT00277"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">43.3.4.1</span> To Run the AckEquivExample Client</h3>
<ol>
<li>
<p>In a terminal window, go to the following directory:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jms/advanced/ackequivexample/
</pre></li>
<li>
<p>To run the client, use the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
appclient -client target/ackequivexample.jar
</pre>
<p>The client output looks something like this (along with some additional output):</p>
<pre xml:space="preserve" class="oac_no_warn">
Queue name is jms/ControlQueue
Queue name is jms/Queue
Topic name is jms/Topic
Connection factory name is jms/DurableConnectionFactory
  QUEUESENDER: Created JMSContext
  QUEUESENDER: Sending message: Here is a message
  SYNCHCONSUMER: Created client-acknowledge JMSContext
  SYNCHCONSUMER: Processing message: Here is a message
  SYNCHCONSUMER: Now I'll acknowledge the message
ASYNCHCONSUMER: Created auto-acknowledge JMSContext
ASYNCHCONSUMER: Sending synchronize message to control queue
TOPICSENDER: Created JMSContext
TOPICSENDER: Receiving synchronize messages from control queue; count = 1
TOPICSENDER: Received synchronize message; expect 0 more
TOPICSENDER: Sending message: Here is a message 1
TOPICSENDER: Sending message: Here is a message 2
ASYNCHCONSUMER: Processing message: Here is a message 1
TOPICSENDER: Sending message: Here is a message 3
ASYNCHCONSUMER: Processing message: Here is a message 2
ASYNCHCONSUMER: Processing message: Here is a message 3
</pre></li>
<li>
<p>After you run the client, you can delete the destination resource <code>jms/ControlQueue</code> by using the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
asadmin delete-jms-resource jms/ControlQueue
</pre>
<p>You will need the other resources for other examples.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNCGJ" name="BNCGJ"></a><a id="JEETT01298" name="JEETT01298"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">43.3.5</span> <a id="sthref2279" name="sthref2279"></a><a id="sthref2280" name="sthref2280"></a>Using Local Transactions</h2>
<p>The <code>transactedexample</code> client demonstrates the use of local transactions in a JMS client application. It also demonstrates the use of the request/reply messaging pattern described in <a href="jms-concepts004.htm#BNCGB">Creating Temporary Destinations</a>, although it uses permanent rather than temporary destinations. The example, <code>TransactedExample.java</code>, is under the <span class="variable">tut-install</span><code>/examples/jms/advanced/transactedexample/src/java/</code> directory.</p>
<p>This example shows how to use a queue and a topic in a single transaction as well as how to pass a <code>JMSContext</code> to a message listener's constructor function. The example represents a highly simplified e-commerce application in which the following actions occur.</p>
<ol>
<li>
<p>A retailer sends a <code>MapMessage</code> to the vendor order queue, ordering a quantity of computers, and waits for the vendor's reply:</p>
<pre xml:space="preserve" class="oac_no_warn">
outMessage = context.createMapMessage();
outMessage.setString("Item", "Computer(s)");
outMessage.setInt("Quantity", quantity);
outMessage.setJMSReplyTo(retailerConfirmQueue);
context.createProducer().send(vendorOrderQueue, outMessage);
System.out.println("Retailer: ordered " + quantity + " computer(s)");
orderConfirmReceiver = context.createConsumer(retailerConfirmQueue);
</pre></li>
<li>
<p>The vendor receives the retailer's order message and sends an order message to the supplier order topic in one transaction. This JMS transaction uses a single session, so you can combine a receive from a queue with a send to a topic. Here is the code that uses the same session to create a consumer for a queue:</p>
<pre xml:space="preserve" class="oac_no_warn">
vendorOrderReceiver = session.createConsumer(vendorOrderQueue);
</pre>
<p>The following code receives the incoming message, sends an outgoing message, and commits the <code>JMSContext</code>. The message processing has been removed to keep the sequence simple:</p>
<pre xml:space="preserve" class="oac_no_warn">
inMessage = vendorOrderReceiver.receive();
// Process the incoming message and format the outgoing 
// message
...
context.createProducer().send(supplierOrderTopic, orderMessage);
...
context.commit();
</pre>
<p>For simplicity, there are only two suppliers, one for CPUs and one for hard drives.</p>
</li>
<li>
<p>Each supplier receives the order from the order topic, checks its inventory, and then sends the items ordered to the queue named in the order message's <code>JMSReplyTo</code> field. If it does not have enough of the item in stock, the supplier sends what it has. The synchronous receive from the topic and the send to the queue take place in one JMS transaction.</p>
<pre xml:space="preserve" class="oac_no_warn">
receiver = context.createConsumer(SupplierOrderTopic);
...
inMessage = receiver.receive();
if (inMessage instanceof MapMessage) {
    orderMessage = (MapMessage) inMessage;
} ...
// Process message
outMessage = context.createMapMessage();
// Add content to message
context.createProducer().send(
                        (Queue) orderMessage.getJMSReplyTo(),
                        outMessage);
// Display message contents
context.commit();
</pre></li>
<li>
<p>The vendor receives the suppliers' replies from its confirmation queue and updates the state of the order. Messages are processed by an asynchronous message listener; this step shows the use of JMS transactions with a message listener.</p>
<pre xml:space="preserve" class="oac_no_warn">
MapMessage component = (MapMessage) message;
...
int orderNumber = component.getInt("VendorOrderNumber");
Order order = Order.getOrder(orderNumber).processSubOrder(component);
context.commit();
</pre></li>
<li>
<p>When all outstanding replies are processed for a given order, the vendor message listener sends a message notifying the retailer whether it can fulfill the order.</p>
<pre xml:space="preserve" class="oac_no_warn">
Queue replyQueue = (Queue) order.order.getJMSReplyTo();
MapMessage retailerConfirmMessage = context.createMapMessage();
// Format the message
context.createProducer().send(replyQueue, retailerConfirmMessage);
context.commit();
</pre></li>
<li>
<p>The retailer receives the message from the vendor:</p>
<pre xml:space="preserve" class="oac_no_warn">
inMessage = (MapMessage) orderConfirmReceiver.receive();
</pre></li>
</ol>
<p><a href="#BNCGK">Figure 43-1</a> illustrates these steps.</p>
<div class="figure"><a id="BNCGK" name="BNCGK"></a><a id="JEETT00056" name="JEETT00056"></a>
<p class="titleinfigure">Figure 43-1 Transactions: JMS Client Example</p>
<img src="img/jms-transactedexample.gif" alt="Description of Figure 43-1 follows" title="Description of Figure 43-1 follows" longdesc="img_text/jms-transactedexample.htm" /><br />
<a id="sthref2281" name="sthref2281" href="img_text/jms-transactedexample.htm">Description of "Figure 43-1 Transactions: JMS Client Example"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The example contains five classes: <code>GenericSupplier</code>, <code>Order</code>, <code>Retailer</code>, <code>Vendor</code>, and <code>VendorMessageListener</code>. The example also contains a <code>main</code> method and a method that runs the threads of the <code>Retailer</code>, <code>Vendor</code>, and two supplier classes.</p>
<p>All the messages use the <code>MapMessage</code> message type. Synchronous receives are used for all message reception except when the vendor processes the replies of the suppliers. These replies are processed asynchronously and demonstrate how to use transactions within a message listener.</p>
<p>At random intervals, the <code>Vendor</code> class throws an exception to simulate a database problem and cause a rollback.</p>
<p>All classes except <code>Retailer</code> use transacted contexts.</p>
<p>The example uses three queues named <code>jms/AQueue</code>, <code>jms/BQueue</code>, and <code>jms/CQueue</code>, and one topic named <code>jms/OTopic</code>.</p>
<a id="GJSHA" name="GJSHA"></a><a id="JEETT00281" name="JEETT00281"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">43.3.5.1</span> To Run the TransactedExample Client</h3>
<ol>
<li>
<p>In a terminal window, go to the following directory:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jms/advanced/transactedexample/
</pre></li>
<li>
<p>To build and package the client, enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre></li>
<li>
<p>Use a command like the following to run the client.</p>
<p>The argument specifies the number of computers to order.</p>
<pre xml:space="preserve" class="oac_no_warn">
appclient -client target/transactedexample.jar 4
</pre>
<p>The output looks something like this (along with some additional output):</p>
<pre xml:space="preserve" class="oac_no_warn">
Quantity to be ordered is 4
Retailer: ordered 4 computer(s)
Vendor: Retailer ordered 4 Computer(s)
Vendor: ordered 4 CPU(s) and hard drive(s)
  Vendor: committed transaction 1
Hard Drive Supplier: Vendor ordered 4 Hard Drive(s)
CPU Supplier: Vendor ordered 4 CPU(s)
Hard Drive Supplier: sent 4 Hard Drive(s)
CPU Supplier: sent 3 CPU(s)
  CPU Supplier: committed transaction
  Hard Drive Supplier: committed transaction
Vendor: Completed processing for order 1
Vendor: unable to send 4 computer(s)
  Vendor: committed transaction 2
Retailer: Order not filled
Retailer: placing another order
Retailer: ordered 8 computer(s)
Vendor: JMSException occurred: javax.jms.JMSException: 
Simulated database concurrent access exception
javax.jms.JMSException: Simulated database concurrent access exception
  Vendor: rolled back transaction 1
Vendor: Retailer ordered 8 Computer(s)
Vendor: ordered 8 CPU(s) and hard drive(s)
  Vendor: committed transaction 1
Hard Drive Supplier: Vendor ordered 8 Hard Drive(s)
CPU Supplier: Vendor ordered 8 CPU(s)
Hard Drive Supplier: sent 8 Hard Drive(s)
CPU Supplier: sent 8 CPU(s)
  CPU Supplier: committed transaction
  Hard Drive Supplier: committed transaction
Vendor: Completed processing for order 2
Vendor: sent 8 computer(s)
  Vendor: committed transaction 2
Retailer: Order filled
</pre></li>
<li>
<p>After you run the client, you can delete the destination resources by using the following commands:</p>
<pre xml:space="preserve" class="oac_no_warn">
asadmin delete-jms-resource jms/AQueue
asadmin delete-jms-resource jms/BQueue
asadmin delete-jms-resource jms/CQueue
asadmin delete-jms-resource jms/OTopic
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jms-examples002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jms-examples004.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2012, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

